<?xml version="1.0"?>
<project name="lab3" default="build" basedir=".">
    <property file="build.properties"/>
    <path id="jar_path">
        <fileset file="${src.lib}/*.jar"/>
        <pathelement path="${build.snap_cla}"/>
    </path>
    <path id="test_path">
        <fileset file="${src.lib}/*.jar"/>
    </path>
    <tstamp>
        <format property="buildtime" pattern="yyyy-MM-dd-HH:mm:ss"/>
    </tstamp>
    <!--clean-->
    <target name="clean">
        <echo message="Deleting result"/>
        <delete file="${build.dir}/lab3.jar"/>
        <delete dir="${build.dir}"/>
    </target>
    <!--init-->
    <target name="init">
        <echo message="Creating basic directories"/>
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.cla}"/>
        <mkdir dir="${build.snap}"/>
        <mkdir dir="${build.inf}"/>
        <mkdir dir="${build.rec}"/>
        <mkdir dir="${build.str}"/>
        <mkdir dir="${build.lib}"/>
        <mkdir dir="${build.snap_cla}"/>
        <mkdir dir="${build.test}"/>
        <mkdir dir="${build.doc}"/>
        <mkdir dir="${build.md5}"/>
        <mkdir dir="${build.sha}"/>
    </target>
    <!--compile-->
    <target name="compile" depends="clean,init">
        <echo message="Compile all .java files"/>
        <javac includeantruntime="true" destdir="${build.snap_cla}" srcdir="${src.java}">
            <classpath refid="jar_path"/>
        </javac>
    </target>
    <!--build-->
    <target name="build" depends="compile">
        <echo message="build jar"/>
        <copy todir="${build.snap_cla}">
            <fileset file="${src.hiber}/**"/>
        </copy>
        <copy todir="${build.cla}">
            <fileset dir="${build.snap_cla}"/>
        </copy>
        <copy todir="${build.snap}">
            <fileset dir="${src.web}"/>
        </copy>
        <copy todir="${build.lib}">
            <fileset dir="${src.lib}"/>
        </copy>
        <jar destfile="${build.dir}/lab3.jar" update="true">
            <fileset dir="${build.snap}" excludes="**/**/Junit*,**/**/TestRunner.class,doc"/>
            <manifest>
                <attribute name="Main-Class" value="${main_class}"/>
                <attribute name="Build-Jdk" value="version 1.8.0_202"/>
            </manifest>
        </jar>
    </target>
    <!--test-->
    <target name="test" depends="build">
        <echo message="Testing your project with junit"/>
        <junit>
            <classpath>
                <pathelement location="${build.snap_cla}"/>
                <pathelement location="${build.lib}/junit-4.12.jar"/>
                <pathelement location="${build.lib}/hamcrest-core-1.3.jar"/>
            </classpath>
            <formatter type="brief" usefile="true"/>
            <batchtest todir="${build.test}">
                <fileset dir="${build.snap_cla}">
                    <include name="Junit*.class"/>
                </fileset>
            </batchtest>
        </junit>
    </target>
    <!--doc-->
    <target name="doc" depends="build">
        <echo message="Creating documentation"/>
        <javadoc sourcepath="${src.java}" destdir="${build.doc}"/>

        <touch file="${build.md5}/total.MD5"/>
        <checksum totalproperty="md5" todir="${build.md5}">
            <fileset dir="${src.java}"/>
        </checksum>
        <echo file="${build.md5}/total.MD5">${md5}</echo>
        <property name="md5" value="${build.md5}/total.MD5"/>

        <touch file="${build.sha}/total.SHA-1"/>
        <checksum totalproperty="sha" todir="${build.sha}" algorithm="SHA-1">
            <fileset dir="${src.java}"/>
        </checksum>
        <echo file="${build.sha}/total.SHA-1">${sha}</echo>
        <property name="sha" value="${build.sha}/total.SHA-1"/>
        <jar destfile="${build.dir}/lab3.jar" update="true">
            <fileset dir="${build.snap}" excludes="**/**/Junit*,**/**/TestRunner.class"/>
            <manifest>
                <attribute name="Main-Class" value="${main_class}"/>
                <attribute name="Build-Jdk" value="version 1.8.0_202"/>
                <attribute name="MD5" value="${md5}"/>
                <attribute name="SHA" value="${sha}"/>
            </manifest>
        </jar>
        <delete file="${build.md5}/total.MD5"/>
        <delete file="${build.md5}/total.sha"/>
    </target>
    <!--report-->

    <target name="report" depends="build">
        <echo message="Testing your project with junit, and create the xml report"/>
        <junit>
            <classpath>
                <pathelement location="${build.snap_cla}"/>
                <pathelement location="${build.lib}/junit-4.12.jar"/>
                <pathelement location="${build.lib}/hamcrest-core-1.3.jar"/>
            </classpath>
            <formatter type="xml" usefile="true"/>
            <batchtest todir="${build.report}">
                <fileset dir="${build.snap_cla}">
                    <include name="Junit*.class"/>
                </fileset>
            </batchtest>
        </junit>



        <exec executable="git" dir="${basedir}/github-repo">
            <arg value="add"/>
            <arg value="build/test-classes/TEST-JunitTestValidator.xml"/>
        </exec>




    </target>

    <macrodef name="git">
        <attribute name="command" />
        <attribute name="dir" default="" />
        <element name="args" optional="true" />
        <sequential>
            <echo message="git @{command}" />
            <exec executable="git" dir="@{dir}">
                <arg value="@{command}" />
                <args/>
            </exec>
        </sequential>
    </macrodef>

    <target name="version" description="Commits all changes to version git">
        <input message="Commit message" addproperty="commit-message" />

        <echo message="Commiting all changes with message ${commit-message}" />
        <git command="add">
            <args>
                <arg value="." />
            </args>
        </git>
        <git command="commit">
            <args>
                <arg value="-am ${commit-message}" />
            </args>
        </git>
        <git command="push" />
    </target>


</project>